Intro:
This is workplan or roadmap for incident response in AWS based on their incident response whitepaper
https://docs.aws.amazon.com/pdfs/whitepapers/latest/aws-security-incident-response-guide/aws-security-incident-response-guide.pdf#aws-security-incident-response-guide
AWS Shared Responsibility Model on Security: AWS will be RESPONSIBLE for security OF the cloud
Customer will be RESPONSIBLE for security IN the cloud i.e you will have FULL CONTROL of your security implementation e.g access to TOOLS
and SERVICES in your AWS environment. With this, you can establish a SECURITY BASELINE for your AWS environment.
What you will need to know as customer
How to RESPOND or INVESTIGATE: If there is a DEVIATION from the BASELINE e.g a misconfiguration or external factors.
Controls: Controls that you can use for security
Capabilities: Capabilities that you can use for security
Automation: How to use automation for remediation purposes for after an incident to improve RESPONSE SPEED and CONSISTENCY
Compliance and Regulatory requirements: on how to build an incident response program.
Some resources to look at on AWS security standards and frameworks-
https://docs.aws.amazon.com/whitepapers/latest/overview-aws-cloud-adoption-framework/security-perspective.html
https://aws.amazon.com/architecture/security-identity-compliance/?cards-all.sort-by=item.additionalFields.sortDate&cards-all.sort-order=desc&awsf.content-type=*all&awsf.methodology=*all
AWS NIST for the industry- https://csrc.nist.gov/pubs/sp/800/61/r2/final

Aspects of AWS Incident Response Overview (Cloud)
The incident response that is carried out in the cloud is different from the traditional on-premises incident response.
The aspects that are focussed on for incident response in AWS are i.e the processes that are needed to be followed to have an effective
incident response plan includes:
Preparation: Prepare your team on how to DETECT and RESPOND to incidents within AWS using DETECTIVE CONTROLS and VERIFYING ACCESS to TOOLS
and CLOUD SERVICES. Prepare a MANUAL and AUTOMATED PLAYBOOKS to verify reliable and consistent responses
Operations: Carry out security events and incident response using NISTs phases of incident response- i.e use NISTS phases to carry out operations
on security events and potential incidents - use DACER (Detect, Analyze Contain, Eradicate, Recover)
Post-Incident Activity(PIA): Iterate based on the outcome of SECURITY EVENTS or SIMULATIONS and improve the efficacy of your plan for response
and investigation in order to REDUCE the risk.
Flow: This aligns with NIST flow too              Preparation ------ Operations (Detection&Analysis)+(Containment&Eradication)---PIA
POP (aspects) for short
NIST SP 800-61  - The current version
AWS Incident Response Principles and Design Goals:
Establish response objectives: Work with stakeholders on how to respond to incidents. Goals like 
1)Containing and mitigating the issue
2)Recovering the affected resources
3)Preserving data for forensics
4)Returning to known safe operations
5)Learn from incidents
Respond using the cloud: Implement your plan in the cloud
Know what you have and what you need: Preserve LOGS, RESOURCES, SNAPSHOTS and OTHER EVIDENCE by storing and copying them in a centralized location
You can use tags , metadata
Use redeployment mechanisms: You can redeploy to remediate if an anomaly is due to misconfigurations.
Automate where possible: Automate where possible to make everything fast and effective
Choose scalable solutions: Build a response plan that is scalable across environments.
Learn and improve your process: Iterate as you progress.

CLOUD SECURITY INCIDENT DOMAINS
There are 3 domains within customer's responsibility where incidents can occur. The domains will require different TOOLS,KNOWLEDGE and RESPONSE
Service: Incidents in service domain may affect AWS ACCOUNT, IAM PERMISSIONS, RESOURCE METADATA, BILLING etc It has to with responding through
AWS API mechanisms, root causes associated with configuration or resource permissions, service-oriented logging.
Infrastructure: It may affect DATA or NETWORK RELATED ACTIVITY e.g processes and data on EC2, traffic to EC2 instances within VPC
Application: Occurs in the application code or software deployed to the services or infrastructure.

PREPARATION: To prepare for INCIDENTS, you cann do that across these 3 domains-
People: Identify the necessary stakeholders for incident response and train them on INCIDENT RESPONSE and CLOUD TECHNOLOGIES.
Define roles and responsibilities for HR, EXECUTIVE, LEGAL, DEVELOPERS/OWNERS OF THE APPLICATION, CLOUD ADMINISTRATOR. Train STAFF
on the technologies that are being used, run GAMEDAY or SIMULATIONS occassionally. Understand AWS technologies and environments.
Document your AWS environments and make it accessible. Use AWS Customer Incident Response Team (CIRT) support if needed.
DDoS Response Support- Use Amazon Shield, which provides a managed protection of Ddos and safeguards web apps running on AWS
AWS Managed Service(AMS)- It provides ongoing management of AWS infrastructure. AMS automates activities like CHANGE REQUESTS, MONITORING
PATCH MANAGEMENT, SECURITY, and BACKUP SERVICES.
Process: Set up processes, by DOCUMENTING ARCHITECTURE, DEVELOP incident response plan and CREATE PLAYBOOKS for consistent IR.
Have clear steps and workflows to manage response to security incidents. Update, Iterate, and Test your incident response processes.
Develop an INCIDENT RESPONSE PLAN document. Your incident response plan document should have these sections:
1) An incident response team overview
2) Roles and responsibilities
3) A communication plan
4) Phases of incident response and action to take
5) Incident severity and pripritization definition
Document and centralize architectural diagrams.
AWS account structure - You need to know:
• How many AWS accounts do you have?
• How are those AWS accounts organized?
• Who are the business owners of the AWS accounts?
• Do you use Service Control Policies (SCPs)? If so, what organizational guardrails are implemented by
using SCPs?
• Do you limit the regions and services that can be used?
• What differences are there between business units and environments (dev/test/prod)?
AWS service patterns:
• What AWS services do you use?
• What are the most widely used AWS services?
Architecture patterns:
• What cloud architectures do you use?
AWS authentication patterns:
• How do your developers typically authenticate to AWS?
• Do you use IAM roles or users (or both)? Is your authentication to AWS connected to an identity
provider (IdP)?
• How do you map an IAM role or user to an employee or system?
• How does access get revoked when someone is no longer authorized?
AWS authorization patterns:
• What IAM policies do your developers use?
• Do you use resource-based policies?
Logging and monitoring:
• What logging sources do you use and where are they stored?
• Do you aggregate AWS CloudTrail logs? If so, where are they stored?
• How do you query CloudTrail logs?
• Do you have Amazon GuardDuty enabled?
• How do you access GuardDuty findings (for example, console, ticketing system, SIEM)?
• Are findings or events aggregated in a SIEM?
• Are tickets automatically created?
• What tooling is in place to analyze logs for an investigation?
Network topology:
• How are devices, endpoints, and connections on your network physically or logically arranged?
• How does your network connect with AWS?
• How is network traffic filtered between en11vironments?
External infrastructure:
• How are externally facing application deployed?
• What AWS resources are publicly accessible?
• What AWS accounts contain infrastructure that is externally facing?
• What DDoS or external filtering is there?
Develop Incident Response Playbooks-
What to include in playbooks:
Playbook overview What risk or incident scenario does this playbook address? What is the goal of
the playbook?
• Prerequisites What logs and detection mechanisms are required for this incident scenario? What is
the expected notification?
• Stakeholder information  Who is involved and what is their contact information? What are each of
the stakeholders responsibilities?
• Response steps  Across phases of incident response, what tactical steps should be taken? What
queries should an analyst run? What code should be run to achieve the desired outcome?
• Detect-  How will the incident be detected?
• Analyze-  How will the scope of impact be determined?
• Contain-  How will the incident be isolated to limit scope?
• Eradicate-  How will the threat be removed from the environment?
• Recover- How will the affected system or resource be brought back into production?
• Expected- outcomes After queries and code are run, what is the expected result of the playbook?
Run regular simulations- You MIMICK threat actor's techniques and procedures (TTPs), then you respond to this mock cyber event.
Types of simulations:
Tabletop exercises- It is a discussion based one, where stakeholders will discuss the roles etc. Done in a day. It focusses on processes, people and collaborations.
Purple team exercises- It increases the collaboration between the INCIDENT RESPONDERS(Blue team) and SIMULATED THREAT ACTORS(Red team)
Blue team generally comprises of SOC and maybe other stakeholders and read team comprises of PENETRATION TESTING TEAM or KEY STAKEHOLDERS
trained in OFFENSIVE SECURITY.
Red team exercises- Red team conducts a SIMULATION with certain objectives from a pre-determined scope. The blue team may not have info about 
the scope or the duration. So this exercise seems to provide a more REALISTIC ASSESSMENT. You should however be cautions that it does not provide damage to your environment security posture
STEPS FOR SIMULATIONS: The regular steps in which simulation follows:
1) Define core exercise elements- define the simulation scenarios and objectives of it and get it approved by the leadership
2) Identify key stakeholders- identify key stakeholders- legal, HR, communications and executive leadership
3) Build and test scenarios- you may need to REDINE scenarios while testing
4) Facilitate the simulation- the type of exercise will determine the facilitation- paer-based or not or less
5) Develop the after action report(AAR)- Identify areas that went well, those that needs improvements, the gaps and build on that for the future.
Technology: Set up access, AGGREGATE and MONITOR LOGS, IMPLEMENT EFFECTIVE ALERT MECHANISMS and DEVELOP RESPONSE and INVESTIGATIVE
CAPABILITIES.
Follow these for technology- I call this blueprint. Because this is exactly how our cloud environment is structured out.
DEVELOP AWS ACCOUNT STRUCTURE: Use AWS Organizations. OUs to group accounts together, to ADMINISTER as a single unit.
For IR, it is important to have an ACCOUNT that supports the functions of IR(security OU and forensic OU) Have accounts for:
1) Log archival- Aggregate logs in this account e.g Central account or Master account or IR account
2) Security tooling- It operates as a delegated admin for security services e.g Master account or Infra or Admin etc
Accounts for each region that you operate in e.g us-east-1 and us-west-2 or us-east-2 and us-west-2. Structure of sample account
                                        Organization Root
                        Security OU                                 Forensic OU
          Security Tooling Account   Log Archival Account      Forensics Region 1   Forensics Region 2
DEVELOP AND IMPLEMENT A TAGGING STRATEGY: Have all resources in your AWS tagged maybe based on environment, application, purpose, version etc
UPDATE AWS ACCOUNT INFO: Have accurate and up-to-date contact info in each of your aws accounts. Have primary and alternate contacts for
SECURITY, BILLING and OPERATIONS. Use a DL to avoid problems emanating from using just one person's email
PREPARE ACCESS TO AWS ACCOUNTS: Ensure your team have access to appropriate environments before an event occurs. Know the access that is required
and provide least privilege access.
UNDERSTAND THE THREAT LANDSCAPE:
Develop threat models- This can help to identify attack vectors a threat actor may have. Understanding what threat you are defending against
will be crucial to responding in a timely manner.
Integrate and use cyber threat intelligence- Cyber threat intelligence includes- IP addresses or file hashes of malware, behavioral pattern
and intent. You can use tools like AWS GuardDuty, DNS Firewall, AWS WAF
SELECT AND SET UP LOGS FOR ANALYSIS AND ALERTING: 
Select and enable log sources that are relevant to AWS workload. AWS Cloudtrail is ENABLED
by default with 90-day management event retention that can be retrieved via Event History in Cloudtrail.
If you need a retention of more than 90 days, you will need to set up a CLOUDTRAIL integrated with S3 bucket and optionally with Cloudwatch log group.
Or set a Cloudtrail Lake (which retains cloudtrail logs up to 7 years and provide SQL query based facility)
If you are using VPC and DNS logs, it is recommended to use VPC Flow Logs(can be used for VPC, subnet or network interface) and Route 53 Resolver Query Logs and STREAM them to an S3 bucket
or Cloudwatch log group.
VPC Flow Logs, CloudTrail and Route 53 resolver query logs are the TRIFECTA of logging for incidents investigation in AWS
Select Log Storage- based on querying tool you use, retention capabilities, cost and familiarity. Usually S3 or Cloudwatch log group.
I don't know of anybody using CloudWatch log grpoup. But if you use s3, you can use Amazon athena as your querying tool and enjoy the lifecycle
policy available. You can use s3 as your log storage and use 3rd party query tool (SIEM)for querying purposes e.g Splunk- we use Splunk.
For log retention, you may want to optimize STORAGE and RETRIEVAL COSTS, so considering 3 - 12 months of logs readily available for querying
and 7 years for retention. Availability and Retention should be dependent on security, statutory, and regulatory requirements and business mandate
The querying mechanisms or tolls that you choose eventually will be dependent on your staff's skillset, tool's logs limits because of cost,
You may use MULTIPLE QUERYING TOOLS; use SIEM tools to perform queries for last 90 days of data and use ATHENA for queries beyond 90 days because
of log ingestion cost. (it is cheaper) than Splunk or other 3rd party for example
Use any of these:
S3 = Athena or Amazon OpenSearch Services
CloudWatch log groups = CloudWatch Log Insights
S3 or CloudWatch log groups = Any of 3rd party SIEM tool.
Use Logs for alerting- Amazon GuardDuty, AWS Security Hub and AWS Config natively provide alerting. You can use SNS or third party tool
to set up your log alert. What do you use to set up alerting for Splunk? We use email for lower environments, then PD for prod.
DEVELOP FORENSIC CAPABILITIES:
Once your environment and AWS accounts are set up for forensic capabilities, you can follow these 4 phases to EFFECTIVELY perform that
CEAR (Collection, Examination, Analysis, Reporting)
Collection- Collect relevant AWS Logs,  e.g AWS Cloudtrail, AWS Config, VPC Flowlogs,  host level logs. Collect snapshots, backups and
memory dumps of impacted AWS resources.
Examination- Examine the data collected. Extract and access the data
Analysis- Analyze the data collected to understand the incidents and draw conclusions
Reporting- Report your findings
Capture backups and snapshots- Set up backups for key systems and databases. With backups, you can restore systems from their previous
safe state. Snapshots provide you point-in-time backups of resources. You may need these in ransomware situations. Sevure your backups too
Automate your forensics in AWS- It will not be helpful to be manually doing this because of human errors and other factors. You can use
Lambda and CloudFormation template to deploy this- https://aws.amazon.com/blogs/security/how-to-automate-forensic-disk-collection-in-aws/
https://aws.amazon.com/solutions/implementations/automated-forensics-orchestrator-for-amazon-ec2/

OPERATIONS: The second aspect for IR 
It is the CORE aspect of performing IR. It has these 5 phases-
Detection- Identify a potential security event
Analysis- Determine if the incident is a security event and ASSESS the scope
Containment- MINIMIZE and LIMIT the scope of the security event
Eradication- REMOVE unauthorized resources or artifacts related to the security event. Implement mitigations that CAUSED the security events.
Recovery- Restore SYSTEMS to known safe state and monitor SYSTEMS to verify that the threat does not return
These 5 phases SHOULD always server as GUIDANCE in responding to IR at any point in time.
Detection: 
Alert Sources for Detection can be any of these
Findings- from AWS services e.g GuardDuty, Security Hub, Amazon Macie, Amazon Inspector, AWS Config, IAM Access Analyzer, & Network Access Analyzer
Logs- Logs from S3 and Cloudwatch log group can be parsed and correlated
Billing activity- A sudden change in billing activity can GENERATE event. Monitor estimated charges
Cyber thereat intelligence- if you have 3rd party intelligence feed, you can correlate it with you are having from other tools
Partner Tools- EDR (Endpoint Detection and Response) and SIEM tools. Intrusion Detective System (IDS) tool.
AWS Trust and Safety- Customer may be contacted by AWS if they suspect malicious activities.
One - time contact - email, ticketing etc
Controls- Directive control e.g root user, Detective control e.g event bridge + SNS to alert Security Operations Center (SOC),
Responsive control- select appropriate playbook, perform analysis and work until incident is resolved.
Using Business Impact Analysis (BIA) to determine the criticality or levels of alerts - LOW MEDIUM or HIGH.
Detective Control Implementations: CAN BE RULE BASED or BEHAVIORAL. PEOPLE IMPLEMENT BOTH THESE DAYS. IDS e.g IDS with Guarduty-
Exfiltration finding- IAM user/ Anomalous behavior is generated. It tells you about an anomaly event by an adversary. It is behavioral in nature.
Imapct finding- S3/ MaliciousIPCaller- guarduty analyses API calls from s3 by comparing sourceIPaddress log management with a table
of public IP addresses that has intelligence feeds, it GENRATES  a finding once it finds a match.
Use frameworks like MITRE ATTACK to undertstand threat actors tactics.
https://attack.mitre.org/
Analysis:
Validation- validate the alerts
Scoping- inventory all resources involved and adjust the alert criticality. Check if it is not FALSE-POSITIVE.
Impact Analysis- details of actual business disruption
Collect and analyze forensic evidence- network traffic packet captures, OS memory dump, AWS cloudtrail logs.
Collect relevant artifcats- collect various types and sources of data that will be relevant to investigation. service/control plane logs
(Cloudtrail, Amazon S3 data events, VPC Flow Logs), data (Amazon s3 metadata and objects) and resources (databases, Amazon EC2 instances)
For EC2, there are certain data to be collected and a specific order to the collection- for analysis and investigation
1) Acquire instance metadata- relevant to the investigation e.g instance ID, IP address, VPC/Subnet ID, Region, AMI ID, SG attached, launch time
2) Enable instance protections and tags- e.g enable termination protection, disable DELETE or TERMINATION for EBS volumes, apply appropriate tags
3) Acquire disks (EBS snapshots)- Acquire EBS snapshot of the attached EBS volumes.
4) Acquire memory- Acquire a system meory image because snapshots may not captue data STORED or CACHED IN MEMORY by apps or OS.
5) Perform live response/artifact collection (Optional)- Perform TARGETED data collection (disk/memory/logs) through LIVE response on the system
only if disk or memory is unable to be acquired.
6) Decommission the instance- Detach the instance from auto-scaling group, deregister the instance from the load balancers and adjust a
or apply a pre-built instance profile with minimized permissions.
7) Isolate or contain the instance- Verify that the instance is effectively isolated from other systems and resources within the environment
by ending and preventing future connections to the instance.
8) Responder's Choice- based on situations and goals, select one of these-
a) Decommission and shutdown the system
b) Continue running the instance within an isolated environment instrumented for monitoring
Example- Marketing and sales department received a ransom note demanding payment in cryptocurrency to avoid public posting of sensive data
The SOC determined that the Amazon RDS database belonging to marketing and sales was PUBLICLY ACCESSIBLE on a stated date
The SOC queried RDS ACCESS LOGS and determined the IP address that was used by one of the developers .
The queried VPC flow logs and determined  that approximate amount of data egressed to the same IP address the same time.
Found that the credentials used is publicly available in open text in a public repo now.
Containment:
The criteria for containment strategy can be found below- through NIST
1) Potential damage to and theft of resources
2) Need for evidence preservation
3) Service availability
4) Time and resources needed to implement the containment strategy
5) Effectiveness of the strategy
6) Duration of the solution
Containment in AWS can be narrowed down to these 3 STEPS-
Source containment
Technique and access containment
Destination containment
Source containment: This involves the USE and APPLICATION OF FILTERING or ROUTING within AWS environment to PREVENT ACCESS to RESOURCES from
a specific IP ADDRESS or NETWORK RANGE. i.e containing the threat from the source- blocking the ip or network range. Examples of what to use
1) Security groups- Apply isolation to SG of an EC2 instance or REMOVE rules from an existing EC2 instance
2) Policies- Configure S3 bucket policy to BLOCK or ALLOW IP address from a certain network range or VPC endpoint.
3) AWS WAF- Configure web ACLs on WAF to provide FINE-GRAINED CONTROL over web requests that resources respond to. Add an IP address or network range
to a configured IP SET on WAF and APPLY match conditions to BLOCK IT.
Technique and access containment: Limiting the functions and IAM principals with access to resource for an unauthorized user. e.g restricting
the permissions of IAM principal that has access to the resource or temporary revocation of the access.
Restrict permissions- Follow least privilege principles for granting permission and during any security event, restrict the permissions to
the principal resource using AWS Management Console, or CLI or SDK.
Revoke Keys- delete or deactivate the ACCESS KEY. You can recativate and access key after it has been deactivated. You CANNOT recover an
access key that has been deleted. Rotate access keys
Configure AWS WAF to MATCH and DENY traffic for malicious traffic incidents like SQL injections or cross-site scripting.
Destination containment: Apply FILTERING or ROUTING to an environment to PREVENT access to TARGETED HOST or RESOURCE. Using AWS services for
destination containments includes;
Network ACLs- Add deny rules added to NACLs on subnets. to prevent access to a particular aws resource
Shutdown- Shutdown the affected resource to prevent access.
Isolation VPCs- This can be preconfigured before an event to PERMIT valid IP addresses and ports and targeted resources can be immediately
moved to isolation VPC during an event.
Autoscaling groups and loadbalancers- Detach and deregister resources atached to them as part of containment procedure.
Eradication:
It involves REMOVAL of suspicious or unauthorized resources in an effort to RETURN the account to SAFE known state.
It depends on multiple factors, which depends on business requirements for the organization. NIST steps for eradication includes
1) Identify and mitigate all vulnerabilities that were exploited
2) Remove malware, inappropriate materials and other components
3) If more affected hosts are discovered( malware host), repaet the process of DETECTION, CONTAINMENT and then ERADICATION.
First step in ERADICATION is to always DETERMINE which resource has been affected. That can be determined from available log sources. Find answers to these questions
Identify UNAUTHORIZED ACTIONS taken by IAM IDENTITIES IN YOUR ACCOUNT
Identify UNAUTHORIZED ACCESS or CHANGES to your account
Identify the CREATION of UNAUTHORIZED RESOURCES or IAM users
Identify the RESOURCES or SYSTEMS with unauthorized changes.
Access the resource to make a decision on business impact of the incident- should you DELETE or RESTORE?
A web server is HOSTING your business application and DELETING IT would cause downtime. RESTORE it from verified SAFE Backups OR RE-LAUNCH
the SYSTEM from a CLEAN-AMI before DELETING the impacted server.
Then PERFORM REMEDIATIONS after the deletion, such as:
1) Rotate or delete keys- to prevent the ACTOR from performing further activities within the account
2) Rotate potentially unauthorized IAM credentials
3) Delete unrecognized or unauthorized resources
NOTE: If you must keep resource for investigation, BACKUP the resource e.g for EC2, create an EBS snapshot of it before removing it.
For malware- Use 3rd party vendors or AWS partners.
Then do a review of your account with AWS Config.
Recovery:
Restore to a known sfae state after validating that there is no further damage-
Perform a BIA first to determine that-
1) Business or dependency priority
2) The restoration plan
3) Authentication and authorization
From NIST Guide-
RESTORE systems from CLEAN BACKUPS- Verify backups are EVALUATED before restoring to systems i.e no infections. Evaluate backups regularly
as part of DR testing to verify that it is working. Use backups before the event based on timestamp
REBUILDING SYSTEMS from SCRATCH e.g redeploying from TRUSTED SOURCE using automation perhaps in anew AWS account
REPLACING compromised files with CLEAN VERSIONS
INSTALLING patches
CHANGING passowrds
TIGHTENING NETWORK Perimeter security( firewall rules, boundary router and control lists)

POST INCIDENT ACTIVITY:
Iterating to improve your security posture. The below can help you VERIFY that your organization remains with the LATEST CAPABILITIES
and Knowledge to effectively respond, no matter the situation.
Establish a framework for LEARNING FROM INCIDENTS- Try to achieve the below points in the lessons learned framework
1) When is a lesson learned held?
2) What is involved in the lesssons learned process?
3) How is lessons learned performed?
4) Who is involved in the process and how?
5) How will areas of improvements be identified?
6) How will you ensure improvements are effectively tracked and implemented?
Ask right questions to get the most values from the process that will foster improvements-
1) When was the incident?
2) When was the incident first identified?
3) How was it identified?
4) What systems alerted on the actvity?
5) What specifically occurred?
6) What worked well?
7) What didn't work well?
8) Which process or procedures failed or failed to scale to respond to the incident?
9) What can be improved within the following areas of
People
1) Were the people who needed to be contacted available and was the contact list up to date?
2) Were people missing training or capabilities needed to effectively respond and investigate the incident?
3) Were the appropriate resources ready and available?
Process
1) Were the processes and procedures followed?
2) Were the processes and procedures documented and available for this type of incident?
3) Were the required processes and procedures missing?
4) Were the responders able to gain timely access to the required information to respond to the issue?
Technology
1) Did the existing alerting systems effectively identify and alert on the activity
2) Do existing alerts need improvement or new alerts need to be built for this type of incident?
3) Did existing tooling allow for effective investigation of the incident?
4) What can be done to help identify this type of incident sooner?
5) What can be done to help prevent this type of incident from occurring again?
6) Who owns the improvement plan and how will you test that it has been implemented?
7) What is the timeline for additional monitoring /preventive controls/process to be implemented and tested?
Establish metrics for success:
Mean time to detect- average time it takes to DISCOVER a security incident.
Mean time to acknowledge- average time it takes to acknowledge and prioritize a possible security incident. Time between the generation of an
alert and when a member of SOC team prioritize the alert for processing.
Mean time to respond- average time it takes to begin the intial response to a possible security incident.
Mean time to contain- average time it takes to contain a security incident.
Mean time to recover- average time it takes to fully return to safe operations from a possible security incidents.
Attacker dwell time- average time an unauthorized user has access to a systems or environment. Priority will be to REDUCE the attacker dwell time.
USE INDICATORS OF COMPROMISE(IOC): It is an ARTIFACT observed in or on NETWORK, SYSTEM, or ENVIRONMENT that can IDENTIFY malicious activities
or security incident
IOCs can be any of these:
IP addresses
domains
network-level artifacts e.g TCP flags or payloads
systems or host-level artifacts
file names and hashes
log file entries or registry entries.
Collect IOCS to continuously BUILD and IMPROVE detections and alerting  and improve the speed and efficacy of investigations.
CONTINUE EDUCATION AND TRAINING:

Link-https://docs.aws.amazon.com/pdfs/whitepapers/latest/aws-security-incident-response-guide/aws-security-incident-response-guide.pdf#aws-security-incident-response-guide