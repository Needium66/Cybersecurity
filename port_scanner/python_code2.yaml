#importing
#advanced string
#dictionaries
#port scanner
#http server
#ftp server
#Some of the vulnerabilities that can be discovered from pentesting
#Site-Wide Cross-Site Request
#Cross Origin Resource Sharing Misconfiguration
#Insufficient NTP Configuration - Mode 6 Query
#F5 Big-Ip Cookie Information Disclosure
#Insufficient XSS Prevention-Reflected
#Insufficient Usename Enumeration Protection
#XSS

#!/bin/python3

#importing
print("importing is important for scripting:")

import sys #system functions and paramters

from datetime import datetime
print(datetime.now())

#Output
┌──(root㉿kali)-[~/week3]
└─# python3 portscanner.py
importing is important for scripting:
2023-06-09 21:00:50.608220
                                                                             
┌──(root㉿kali)-[~/week3]
└─# 
#importing as an alias
from datetime import datetime as dt #importing with an alias
print(dt.now())

#print new line
def new_line():
        print('\n')

new_line()

#Advanced scripting
print("Advanced Strings:")
my_name = "Olajide"
#I want to print the first initial of my name
print(my_name[0])  #first initial
#want last letter of my name to be printed
print(my_name[-1])

#Output
┌──(root㉿kali)-[~/week3]
└─# python3 portscanner.py
importing is important for scripting:
2023-06-09 21:11:38.341399
2023-06-09 21:11:38.341502


Advanced Strings:
O
e
                                                                             
┌──(root㉿kali)-[~/week3]
#capture the first word in a sentence

sentence = "This is a sentence."

print(sentence[:4]) #first word(count the number of words in the sentence and make it colon with it)
print(sentence[-9:-1]) #this print out the last word
#split a sentence
print(sentence.split()) #split sentence by delimiter (space)
#to join the sentence back
sentence_split = sentence.split()
sentence_join = ' '.join(sentence_split)
print(sentence_join)
print('\n'.join(sentence_split))

#Output
┌──(root㉿kali)-[~/week3]
└─# python3 portscanner.py
importing is important for scripting:
2023-06-10 11:55:01.024006
2023-06-10 11:55:01.024082


Advanced Strings:
O
e
This
sentence
['This', 'is', 'a', 'sentence.']
This is a sentence.
This
is
a
sentence.
                                                                             
┌──(root㉿kali)-[~/week3]
#quote exception
quoteception = "I said, 'give me all the money'"
print(quoteception)

quoteception = "I said, \"give me all the money\""

#general check
print("A" in "Apple")
#change the logic and define some variables
letter = "A"
word = "Apple"
print(letter in word)
#change the letter to lower case a and print again
letter = "a"
print(letter in word)
#to have n output that is true, use lower command in it.
print(letter.lower() in word.lower())

word_two = "Bingo"
#the first one gives True and the second one is false, but the "and not" "false" makes it to be True
print((letter.lower() in word.lower()) and not (letter.lower() in word_two.lower()))
#getting whitespace;space off using strip
too_much_space = "          hello        "
print(too_much_space.strip())

full_name = "lajide Efunkunle"
print(full_name.replace("lajide", "Olajide"))
#Find where my last name occurs in the string
print(full_name.find("Efunkunle"))

#using placeholder
movie = "The Godfather"
print("My favorite movie is {}.".format(movie))

def favorite_book(title, author):
        fav = "My favorite book is \"{}\", which is written by {}.".format(title, author)
        return fav

print(favorite_book("My Hero","O. Efunkunle"))

#Output
Advanced Strings:
O
e
This
sentence
['This', 'is', 'a', 'sentence.']
This is a sentence.
This
is
a
sentence.
I said, 'give me all the money'
True
True
False
True
True
hello
Olajide Efunkunle
7
My favorite movie is The Godfather.
My favorite book is "My Hero", which is written by O. Efunkunle.
                                                                             
┌──(root㉿kali)-[~/week3]
└─# 
#
new_line()

#Dictionaries
print("Dictionaries are keys and values pairs:")
#drink as key, price as value
drinks = {"White Russians": 8, "Vita Malt": 2, "Lemon Drop": 3, "Buttery Nipple": 6}
print(drinks)

employees = {"Finance": ["Bob", "Linda", "Tina"], "IT": ["Ola", "Olu", "Muideen"], "HR": ["Damola", "Olufunke"]}
print(employees)
#add another employee in another department
employees["Legal"] = ["Sewa"]
print(employees)

#can you update to add to the employees too, instead of using only the key-value pair.
employees.update({"Sales": ["Ollie", "OJ"]})
print(employees)

#update drinks
drinks["White Russians"] = 9
print(drinks)

#to get the price of a drink using get
print(drinks.get{"White Russians"})

#Outputs
Dictionaries are keys and values pairs:
{'White Russians': 8, 'Vita Malt': 2, 'Lemon Drop': 3, 'Buttery Nipple': 6}
{'Finance': ['Bob', 'Linda', 'Tina'], 'IT': ['Ola', 'OluMuideen'], 'HR': ['Damola', 'Olufunke']}
{'Finance': ['Bob', 'Linda', 'Tina'], 'IT': ['Ola', 'OluMuideen'], 'HR': ['Damola', 'Olufunke'], 'Legal': ['Sewa']}
{'Finance': ['Bob', 'Linda', 'Tina'], 'IT': ['Ola', 'OluMuideen'], 'HR': ['Damola', 'Olufunke'], 'Legal': ['Sewa'], 'Sales': ['Ollie', 'OJ']}
{'White Russians': 9, 'Vita Malt': 2, 'Lemon Drop': 3, 'Buttery Nipple': 6}
9

#List and Dictionaries combination
series = ["Game of Thrones", "Snowfall", "Power", "Things Fall Apart"]
person = ["Ola", "Olu", "Muideen", "Abiona"]
combined = zip(series, person)
series_dictionary = {key: value for key, value is combined}

print(series_dictionary)
